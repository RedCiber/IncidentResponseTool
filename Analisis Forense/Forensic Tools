ChatGPT Forensics: https://github.com/markscanlonucd/ChatGPT-for-Digital-Forensics

An치lisis TRIAGE: https://tria.ge/

Python:  https://github.com/topics/forensic-analysis?l=python

Literatura Ambientes Forenses controlados: https://csrc.nist.gov/glossary/term/Forensically_Clean
 :::https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-86.pdf
 
 Documentaci칩n:
 
 https://www.sans.org/posters/?focus-area=digital-forensics --
 ---http://journeyintoir.blogspot.com/
 ---https://ponderthebits.com/
 ---https://eforensicsmag.com/download/preview-digital-forensic-tools/
 
 https://koodous.com/ (An치lisis de Malware - CTI - TH)

 
 Licenciado Open Source :
 
 Autopsy: https://www.sleuthkit.org/autopsy/ ---- IoC Analisis ....https://stixproject.github.io/
 
 FTK: https://accessdata.com/product-download/ftk-imager-version-4-5
 
 ----https://ericzimmerman.github.io/#!index.md::: Artefactos de Windows
 
 Log parser: https://www.microsoft.com/en-us/download/details.aspx?id=24659
 
 
 Python forensics:
 
 https://github.com/PythonForensics
 
 OPEND DFIR: https://osdfir.blogspot.com/2022/11/find-needle-faster-with-hashr-data.html
 
 
 Taller:
 
 https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/hash_db_page.html
 
 https://www.proquest.com/docview/2411266782

Configuraci칩n de Flare - VM

https://github.com/mandiant/flare-vm



Encrypt and Decrypt 

# MD5: Encrypt and decrypt

from hashlib import md5

class MD5:
    def __init__(self, data = "Esta es la clase de Ciberseguridad"):
        self.data = data
    def encrypt(self):
        self.data = md5(self.data.encode()).hexdigest()
        return "Crypted: "+self.data
    def decrypt(self, data):
        if md5(data.encode()).hexdigest() == self.data:
            return "Decrypted: "+data
            del self.data
        else:
            return "Error"

crypt = MD5()
print(crypt.encrypt()) # Encrypt
print(crypt.decrypt("Esta es la clase de Ciberseguridad")) # Decrypt data argument
 
 
 
 
 
 
 
 
 
 


